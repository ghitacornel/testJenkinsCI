#  https://www.cloudbees.com/blog/how-to-install-and-run-jenkins-with-docker-compose
# docker-compose.yaml for CI
# BEFORE ALL
# wsl -d docker-desktop
# sysctl -w vm.max_map_count=262144
services:

  # step 1
  # start the jenkins container
  # check the initial password displayed in the container console e.g. e35910929b9e4b41bbde201a63d882ee
  # wait for completion
  # go to http://localhost:8080/
  # use initial password
  # install suggested plugins or whatever
  # create first user
  # use the following credential
  # user = cornel
  # pass = sefusefu
  # full name = cornel
  # email = ghita_cornel@yahoo.com
  # url = http://localhost:7777/
  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    privileged: true
    user: root
    ports:
      - 7777:8080
      - 50000:50000
    volumes:
      - jenkins_configuration:/var/jenkins_home
    networks:
      - ci_network

  # step 2 (optional)
  # define a build agent

  # SonarQube
  # http://localhost:9000/projects
  # default user = admin
  # default pass = admin
  #         pass = sefusefu
  sonarQube:
    image: sonarqube:latest
    container_name: sonarQube
    depends_on:
      - sonarQube_database
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarQube_database:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/SonarQube/data
    ports:
      - 9000:9000
    networks:
      - ci_network
      - sonarQube_network

  # SonarQube database
  # do not expose port
  # define in the same network as sonarQube
  sonarQube_database:
    image: postgres:latest
    container_name: sonarQube_database
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonarqube_postgresql:/var/lib/postgresql
      - sonarqube_postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarQube_network

  #http://localhost:8081
  #user=admin
  #pass=sefusefu
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    volumes:
      - nexus_data:/sonatype-work
    ports:
      - 8081:8081
    networks:
      - ci_network

volumes:
  jenkins_configuration:
  sonarqube_data:
  sonarqube_postgresql:
  sonarqube_postgresql_data:
  nexus_data:

networks:
  sonarQube_network:
    driver: bridge
  ci_network:
    driver: bridge